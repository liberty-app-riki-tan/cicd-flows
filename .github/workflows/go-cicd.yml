on:
  workflow_call:
    inputs:
      service-config-name:
        required: true
        type: string
      containerName:
        required: false
        type: string
      containerPort:
        required: false
        type: string
      ecs-service:
        required: false
        type: string
      deploy-env:
        required: false
        type: string
  
jobs:
  ci_build:
    runs-on: self-hosted
    environment:
      name: ${{ inputs.deploy-env }}
    env:
      aws-region: ${{ secrets.AWS_REGION }}
      aws-role: ${{ secrets.AWS_ROLE }}
      cluster: ${{ secrets.ECS_CLUSTER }}
      targetGroupArn: ${{ secrets.TARGETGROUPARN }}
      securityGroups: ${{ secrets.SECURITYGROUPS }}
      subnets: ${{ secrets.SUBNETS }}
      task-definition-file: ${{ secrets.TASK_DEF_FILE }}
      aws-registry: ${{ secrets.DOCKER_REGISTRY }}
      loadBalancers-json: ${{ secrets.LB_JSON }}
    name: CICD flow of Web
    steps:
      - name: Assume new role
        uses: PROTOTYPE/cicd-actions/.github/actions/change-aws-role@master
        with:
          aws-region: ${{ env.aws-region }}
          aws-role: ${{ env.aws-role }}
      - name: Deploy Amazon ECS task definition
        uses: PROTOTYPE/cicd-actions/.github/actions/ecs-deploy@master
        timeout-minutes: 3
        with:
          aws-region: ${{ env.aws-region }}
          aws-role: ${{ env.aws-role }}
          ecs-service: ${{ inputs.ecs-service }}
          ecs-cluster: ${{ env.cluster }}
          image-full-name: 395583234375.dkr.ecr.us-east-1.amazonaws.com/traefik:b12367828bc3c5272cd64c42dbbc1b5086c20c2f
          container-name: ${{ inputs.containerName }}
          containerPort: ${{ inputs.containerPort }}
          targetGroupArn: ${{ env.targetGroupArn }}
          securityGroups: ${{ env.securityGroups }}
          subnets: ${{ env.subnets }}
          task-definition-file: ${{ env.task-definition-file }}
          loadBalancers-json: ${{ env.loadBalancers-json }}
          wait: true
