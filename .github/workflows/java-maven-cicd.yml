on:
  workflow_call:
    inputs:
      service-config-name:
        required: true
        type: string
      jar-path:
        required: false
        type: string
      dockerfile-path:
        required: false
        type: string
      java-version:
        required: false
        type: number
      containerName:
        required: false
        type: string
      containerPort:
        required: false
        type: string
      ecs-service:
        required: false
        type: string
      deploy-env:
        required: false
        type: string
      deploy_tag:
        required: false
        type: string
      repo-name:
        required: false
        type: string
      branch:
        required: false
        type: string
      update-desired-count:
        required: false
        type: number
        default: -1
jobs:
  ci_build:
    runs-on: [ self-hosted, mvn ]
    environment:
      name: ${{ inputs.deploy-env }}
    env:
      service-tag: ${{ inputs.deploy_tag }}
      deploy_env: ${{ inputs.deploy-env }}
    name: CI flow
    outputs:
      image-name: ${{ steps.output.outputs.image-name }}
    steps:
      - name: Get code
        uses: liberty-group-tech/cicd-actions/.github/actions/get-code@master
        with:
          repo-name: ${{ inputs.repo-name }}
          token: ${{ secrets.REPO_T }}
          branch: ${{ inputs.branch }}
      - name: Transfer env to lowercase
        run: |
          echo "deploy_env_lowercase=${deploy_env,,}" >>${GITHUB_ENV}
      - name: Init Config
        uses: liberty-group-tech/cicd-actions/.github/actions/get-config@master
        with:
          service-config-name: ${{ inputs.service-config-name }}
          token: ${{ secrets.REPO_T }}
          config-file: env-config-service.yml
          deploy-env: ${{ env.deploy_env_lowercase }}
      - name: Do health check
        uses: liberty-group-tech/cicd-actions/.github/actions/health-check@master
        with:
          env_not_ready: ${{ env.env_not_ready }}
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.java-version }}
          distribution: 'temurin'
      - name: Build with Maven
        run: |
          export M2_HOME=/home/ssm-user/apache-maven-3.8.8
          PATH=$M2_HOME/bin:$PATH
          mvn -e clean package -DskipTests
      - name: Copy dockerfile
        if: ${{ inputs.dockerfile-path != '' }}
        run: |
          cp ${{ inputs.dockerfile-path }} Dockerfile
      - name: Docker build and push
        id: docker-build
        uses: liberty-group-tech/cicd-actions/.github/actions/ecr-build-push@master
        with:
          aws-region: ${{ env.aws-region }}
          aws-tools-region: ${{ env.aws-tools-region }}
          aws-role: ${{ env.aws-role }}
          project-name: ${{ inputs.containerName }}
          aws-registry: ${{ env.aws-registry }}
          need-del-local-image: true
          env-commit-sha: ${{ env.env-commit-sha }}
      - name: Set out put
        id: output
        run: |
          echo "image-name=${{ steps.docker-build.outputs.image-name }}" >> $GITHUB_OUTPUT
