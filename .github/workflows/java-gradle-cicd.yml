on:
  workflow_call:
    inputs:
      jar-path:
        required: true
        type: string
      java-version:
        required: false
        type: number
      containerName:
        required: false
        type: string
      containerPort:
        required: false
        type: string
      ecs-service:
        required: false
        type: string
      deploy-env:
        required: false
        type: string
jobs:
  ci:
    runs-on: self-hosted
    environment:
      name: QA
    env:
      aws-region: ${{ secrets.AWS_REGION }}
      cluster: ${{ secrets.ECS_CLUSTER }}
      targetGroupArn: ${{ secrets.TARGETGROUPARN }}
      securityGroups: ${{ secrets.SECURITYGROUPS }}
      subnets: ${{ secrets.SUBNETS }}
    name: CICD flow of java gradle build
    steps:
      - run: echo ${{ env.aws-region }}-${{ env.cluster }}-${{ env.targetGroupArn }}-${{ env.securityGroups }}-${{ env.subnets }}
        shell: bash
      - name: Code CI build
        uses: PROTOTYPE/cicd-actions/.github/actions/ci-java-gradle-action@v1
        with:
          java-version: ${{ inputs.java-version }}
          jar-path: ${{ inputs.jar-path }}
      - name: Docker build and push
        id: docker-build
        uses: PROTOTYPE/cicd-actions/.github/actions/ecr-build-push@v1
        with:
          aws-region: ${{ env.aws-region }}
          project-name: ${{ inputs.containerName }}
      - run: echo ${{ steps.docker-build.outputs.image-name }}
        shell: bash
      - name: Deploy Amazon ECS task definition
        uses: PROTOTYPE/cicd-actions/.github/actions/ecs-deploy@v1
        with:
          aws-region: ${{ env.aws-region }}
          service: ${{ inputs.ecs-service }}
          ecs-cluster: ${{ env.cluster }}
          image-full-name: ${{ steps.docker-build.outputs.image-name }}
          container-name: ${{ inputs.containerName }}
          containerPort: ${{ inputs.containerPort }}
          targetGroupArn: ${{ env.targetGroupArn }}
          securityGroups: ${{ env.securityGroups }}
          subnets: ${{ env.subnets }}
          wait: true
