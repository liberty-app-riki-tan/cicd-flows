on:
  workflow_call:
    inputs:
      service-config-name:
        required: true
        type: string
      deploy-env:
        required: true
        type: string
      deploy_tag:
        required: true
        type: string
      image-name:
        required: false
        type: string
      replace-variables:
        required: false
        type: string
      environment-variables:
        required: false
        type: string
      deploy_sub_env:
        required: true
        type: string
      containerPort:
        required: false
        type: string
      origin_deploy_tag:
        required: false
        type: string
      need-skip:
        required: false
        type: boolean
        default: false
      update-desired-count:
        required: false
        type: number
        default: -1
  
jobs:
  deploy:
    runs-on: [ self-hosted ]
    environment:
      name: ${{ inputs.deploy-env }}
    env:
      deploy_env: ${{ inputs.deploy-env }}
      service-tag: ${{ inputs.deploy_tag }}
      need-skip: ${{ inputs.need-skip }}
      origin_deploy_tag: ${{ inputs.origin_deploy_tag }}
    outputs:
      last-task-definition-arn: ${{ steps.output.outputs.last-task-definition-arn }}
    name: ${{ inputs.deploy_sub_env }} CD flow
    steps:
      - name: Transfer env to lowercase
        run: |
          echo "deploy_env_lowercase=${deploy_env,,}" >>${GITHUB_ENV}
      - name: Init Config
        uses: liberty-group-tech/cicd-actions/.github/actions/get-prod-config@master
        with:
          service-config-name: ${{ inputs.service-config-name }}
          token: ${{ secrets.REPO_T }}
          config-file: env-config-prod-service.yml
          deploy-env: ${{ env.deploy_env_lowercase }}
          deploy-sub-env: ${{ inputs.deploy_sub_env }}
      - name: Assume new role
        if: ${{ !env.need-skip || env.need-skip == 'false' }}
        uses: liberty-group-tech/cicd-actions/.github/actions/change-aws-role@master
        with:
          aws-region: ${{ env.aws-region }}
          aws-role: ${{ env.aws-role }}
      - name: Deploy Amazon ECS task definition with tag
        if: ${{ !env.need-skip || env.need-skip == 'false' }}
        id: deploy
        uses: liberty-group-tech/cicd-actions/.github/actions/ecs-deploy@master
        timeout-minutes: 15
        with:
          aws-region: ${{ env.aws-region }}
          aws-role: ${{ env.aws-role }}
          ecs-service: ${{ env.deploy_env_lowercase }}-${{ env.ecs-service }}-${{ env.service-tag }}
          ecs-cluster: ${{ env.cluster }}
          image-full-name: ${{ inputs.image-name }}
          container-name: ${{ env.deploy_env_lowercase }}-${{ env.ecs-service }}-${{ env.service-tag }}
          containerPort: ${{ inputs.containerPort }}
          targetGroupArn: ${{ env.targetGroupArn }}
          loadBalancers-json: ${{ env.loadBalancers-json }}
          securityGroups: ${{ env.securityGroups }}
          subnets: ${{ env.subnets }}
          task-definition-file: ${{ env.task-definition-file }}
          healthCheckGracePeriodSeconds: ${{ env.hcgs }}
          wait-for-minutes: ${{ env.wait-for-minutes }}
          tags: ${{ env.tags }}
          replace-variables: |
            {{TAG}}=${{ env.service-tag }}
            {{PROD_ENV}}=${{ env.deploy_env_lowercase }}
            {{ECS_EXECUTION_ROLE_ARN}}=${{ env.ecs-execution-role-arn }}
            {{ECS_TASK_ROLE_ARN}}=${{ env.ecs-task-role-arn }}
            {{LOG_GROUP}}=${{ env.log-group }}
            {{AWS_REGION}}=${{ env.aws-region }}
            ${{ env.replace-variables }}
            ${{ inputs.replace-variables }}
          environment-variables: |
            APP_NAME=${{ env.ecs-service }}
            ${{ env.environment-variables }}
            ${{ inputs.environment-variables }}
          wait: true
      - name: Set out put
        id: output
        run: |
          echo "last-task-definition-arn=${{ steps.deploy.outputs.last-task-definition-arn }}" >> $GITHUB_OUTPUT
