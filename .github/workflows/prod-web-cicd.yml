on:
  workflow_call:
    inputs:
      service-config-name:
        required: true
        type: string
      containerName:
        required: false
        type: string
      containerPort:
        required: false
        type: string
      ecs-service:
        required: false
        type: string
      docker_arg_list:
        required: false
        type: string  
      deploy-env:
        required: false
        type: string
      deploy_tag:
        required: false
        type: string
      env-tag:
        required: false
        type: string
      repo-name:
        required: false
        type: string
      branch:
        required: false
        type: string
      skip-pre-prod:
        required: false
        type: boolean
        default: false
  
jobs:
  ci_build:
    runs-on: [ self-hosted, dev-qa-ci ]
    environment:
      name: ${{ inputs.deploy-env }}${{ inputs.env-tag }}
    env:
      deploy_env: ${{ inputs.deploy-env }}
      origin_deploy_tag: ${{ inputs.deploy_tag }}
    outputs:
      image-name: ${{ steps.output.outputs.image-name }}
    name: CI flow
    steps:
      - name: Get code
        uses: liberty-group-tech/cicd-actions/.github/actions/get-code@master
        with:
          repo-name: ${{ inputs.repo-name }}
          token: ${{ secrets.REPO_T }}
          branch: ${{ inputs.branch }}
      - name: Transfer env to lowercase
        run: |
          echo "deploy_env_lowercase=${deploy_env,,}" >>${GITHUB_ENV}
      - name: Init Config
        uses: liberty-group-tech/cicd-actions/.github/actions/get-prod-config@master
        with:
          service-config-name: ${{ inputs.service-config-name }}
          token: ${{ secrets.REPO_T }}
          config-file: env-config-prod-service.yml
          deploy-env: ${{ env.deploy_env_lowercase }}
          deploy-sub-env: prod
      - name: Do health check
        uses: liberty-group-tech/cicd-actions/.github/actions/health-check@master
        with:
          env_not_ready: ${{ env.env_not_ready }}
          deploy_env_lowercase: ${{ env.deploy_env_lowercase }}
          skip: false
      - name: Docker build and push
        id: docker-build
        uses: liberty-group-tech/cicd-actions/.github/actions/ecr-build-push@master
        with:
          aws-region: ${{ env.aws-region }}
          aws-tools-region: ${{ env.aws-tools-region }}
          aws-role: ${{ env.aws-role }}
          project-name: ${{ inputs.containerName }}
          aws-registry: ${{ env.aws-registry }}
          docker-build-arg: "--build-arg APP_ENV=prod --build-arg COMMIT_ID=${{ env.env-commit-sha }} --build-arg NETWORK=${{ inputs.deploy_tag }} ${{ inputs.docker_arg_list }}"
          need-del-local-image: true
          env-commit-sha: ${{ env.env-commit-sha }}
      - name: Set out put
        id: output
        run: |
          echo "image-name=${{ steps.docker-build.outputs.image-name }}" >> $GITHUB_OUTPUT            
  image_confirm:
    runs-on: [ self-hosted ]
    needs: ci_build
    name: Image Confirm
    outputs:
      image-name: ${{ steps.output.outputs.image-name }}
    steps:
      - name: Set out put
        id: output
        run: |
          echo "image-name=${{ needs.ci_build.outputs.image-name }}" >> $GITHUB_OUTPUT
  upload_static:
    runs-on: [ self-hosted ]
    needs: [image_confirm]
    environment:
      name: ${{ inputs.deploy-env }}${{ inputs.env-tag }}
    env:
      deploy_env: ${{ inputs.deploy-env }}
      origin_deploy_tag: ${{ inputs.deploy_tag }}
    name: Upload Static Files
    steps:
      - name: Transfer env to lowercase
        run: |
          echo "deploy_env_lowercase=${deploy_env,,}" >>${GITHUB_ENV}
      - name: Init Config
        uses: liberty-group-tech/cicd-actions/.github/actions/get-prod-config@master
        with:
          service-config-name: ${{ inputs.service-config-name }}
          token: ${{ secrets.REPO_T }}
          config-file: env-config-prod-service.yml
          deploy-env: ${{ env.deploy_env_lowercase }}
          deploy-sub-env: prod
      - name: Assume new role
        uses: liberty-group-tech/cicd-actions/.github/actions/change-aws-role@master
        with:
          aws-region: ${{ env.aws-region }}
          aws-role: ${{ env.aws-role }}
      - name: Login to new Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
      - name: Upload static files
        run: |
          echo -e "[profile wellowallet] \n role_arn = ${{ env.aws-role }} \n credential_source = Ec2InstanceMetadata \n region = ${{ env.aws-region }}" > config
          cat config
          docker build --build-arg DEFAULT_REGION=${{ env.aws-region }} --build-arg ASSUME_ROLE=${{ env.aws-role }} --build-arg BUILDER_IMAGE=${{ needs.image_confirm.outputs.image-name }} -t static-files/upload:latest . -f static.upload.Dockerfile
          docker rmi static-files/upload:latest
  pre_prod_deploy:
    name: Pre Prod Deploy
    uses: liberty-group-tech/cicd-flows/.github/workflows/prod-cd.yml@master
    if: ${{ !failure() && !cancelled() && !inputs.skip-pre-prod }}
    secrets: inherit
    needs: [image_confirm]
    with:
      service-config-name: ${{ inputs.service-config-name }}
      deploy-env: ${{ inputs.deploy_env }}
      deploy_tag: pre-prod
      image-name: ${{ needs.image_confirm.outputs.image-name }}
      deploy_sub_env: pre-prod
      containerPort: ${{ inputs.containerPort }}
      origin_deploy_tag: ${{ inputs.deploy_tag }}
  prod_deploy:
    name: Prod Deploy
    if: ${{ !failure() && !cancelled() }}
    uses: liberty-group-tech/cicd-flows/.github/workflows/prod-cd.yml@master
    secrets: inherit
    needs: [image_confirm, pre_prod_deploy]
    with:
      service-config-name: ${{ inputs.service-config-name }}
      deploy-env: ${{ inputs.deploy_env }}
      deploy_tag: normal
      image-name: ${{ needs.image_confirm.outputs.image-name }}
      deploy_sub_env: prod
      containerPort: ${{ inputs.containerPort }}
      origin_deploy_tag: ${{ inputs.deploy_tag }}
  clear_cache:
    runs-on: [ self-hosted ]
    needs: [prod_deploy]
    environment:
      name: ${{ inputs.deploy-env }}${{ inputs.env-tag }}
    env:
      deploy_env: ${{ inputs.deploy-env }}
      origin_deploy_tag: ${{ inputs.deploy_tag }}
    name: Clear CDN Cache
    steps:
      - name: Transfer env to lowercase
        run: |
          echo "deploy_env_lowercase=${deploy_env,,}" >>${GITHUB_ENV}
      - name: Init Config
        uses: liberty-group-tech/cicd-actions/.github/actions/get-prod-config@master
        with:
          service-config-name: ${{ inputs.service-config-name }}
          token: ${{ secrets.REPO_T }}
          config-file: env-config-prod-service.yml
          deploy-env: ${{ env.deploy_env_lowercase }}
          deploy-sub-env: prod
      - name: Assume new role
        uses: liberty-group-tech/cicd-actions/.github/actions/change-aws-role@master
        with:
          aws-region: ${{ env.aws-region }}
          aws-role: ${{ env.aws-role }}
      - name: Set up Python 3
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: install package
        run: |
          pip install boto3==1.26.153
        shell: bash
      - name: Clear CDN Cache
        uses: liberty-group-tech/cicd-actions/.github/actions/clear-cdn-cache@master
        with:
          url-str: /email-unsubscribe
          distribution-id: E1EJ0F02ND5HO8
